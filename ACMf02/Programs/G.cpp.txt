// Solution by Matthew Merzbacher (matthew@mills.edu)

#include <iostream>
#include <string>
#include <fstream.h>
using namespace std;

int gcd(int a, int b) {
  if (a == 0) return b;
  if (b < a) return gcd(b, a);
  return gcd(a, b-a);
}

void reduce(int a, int b) {
  if (a == 0) cout << 0 << endl;
  else if (a == b) cout << 1 << endl;
  else {
    int div = gcd(a, b);
    cout << a / div << "/" << b / div << endl;
  }
}

void appx(string s1, string s2) {
  int i, j, k, l, cur;
  int best = 0;

  for (i = 0; i < s1.size(); i++)
    for (j = 0; j < s2.size(); j++) {
      cur = 0;
      for (k = i, l = j; l < s2.size() && k < s1.size(); k++, l++)
	  if (s1[k] == s2[l]) cur++;
      if (cur > best) best = cur;
    }

  reduce(best * 2, s1.size() + s2.size());
}

int main() {
  string s1, s2;

  fstream
	InStream;

	InStream.open("G.txt", ios::in);

  while (InStream >> s1) {
    if (s1 == "-1") return 0;
    InStream >> s2;
    cout << "appx(" << s1 << "," << s2 << ") = ";
    appx(s1, s2);
  }
    
  return 0;
}
