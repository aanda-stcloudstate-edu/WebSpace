Sessions for UNIX and Shell ProgrammingA TextbookBehrouz A. Forouzan and Richard F. GilbergBrooks/Cole Publishing( ISBN 0 534-95159-7)COPYRIGHT (c) 2003 the Wadsworth Group. Brooks/Cole is an imprint of the Wadsworth Group, a division of Thomson Learning, Inc. Thomson Learning(tm) is a trademark used herein under license.============================================================Session 5.1.Verify Login Shell$ echo $SHELL/bin/ksh------------------------------------------------------------Session 5.2 Verify Current Shell$ echo $0ksh------------------------------------------------------------Session 5.3  Output Redirection Error$ who > whoOct2ksh: whoOct2: file already exists------------------------------------------------------------Session 5.4 Output Redirection Error Override$ who >| whoOct2$ more whoOct2ab052408   ttyq3        Oct  2 15:24  (atc2west-171.atc.fhda.edu)------------------------------------------------------------Session 5.5 Standard Output and Error on Monitor$ ls -l file1 noFileCannot access noFile: No such file or directory-rw-r--r--    1 gilberg  staff       1234 Oct  2 18:16 file1------------------------------------------------------------Session 5.6 Standard Output to File; Errors on Monitor$ ls -l file1 noFile 1>fileListCannot access noFile: No such file or directory$ more fileList-rw-r--r--    1 gilberg  staff       1234 Oct  2 18:16 file1------------------------------------------------------------Session 5.7. Standard Output and Errors to Different Files$ ls -l file1 noFile 1> myStdOut 2> myStdErr$ more myStdOut-rw-r--r--    1 gilberg  staff       1234 Oct  2 18:16 file1$ more myStdErrCannot open noFile: No such file or directory------------------------------------------------------------Session 5.8 Standard Output and Errors to Same File$ ls -l file1 noFile 1> myStdOut 2> myStdOutksh: myStdOut: file already exists------------------------------------------------------------Session 5.9 Standard Output to Files with Redirection Override$ ls -l file1 noFile 1>| myStdOut 2>| myStdOut$ ls myStdOutCannot open noFile: No such file or directory------------------------------------------------------------Session 5.10 Redirecting Output and Errors to One File$ ls -l file1 noFile 1> myStdOut 2>& 1$ more myStdOutCannot access noFile: No such file or directory-rw-r--r--    1 gilberg  staff       1234 Oct  2 18:16 file1------------------------------------------------------------Session 5.11  Demonstrate Simple tee Command$ tee teeOutThis is a sample of the tee command. You see each line repeated This is a sample of the tee command. You see each line repeated on the standard output as soon as I key enter. Each line is also on the standard output as soon as I key enter. Each line is also written to teeOut.written to teeOut.$ more teeOutThis is a sample of the tee command. You see each line repeated on the standard output as soon as I key enter. Each line is also written to teeOut.------------------------------------------------------------Session 5.12 Demonstrate tee to Two Files$ who | tee whoOct2ab052408   ttyq3        Oct  2 15:24  (atc2-321.atc.fhda.edu)rrp58061   ttyq4        Oct  2 13:17  (351.18.203.129)bachlan    ttyq5        Oct  2 07:48  (mystic.atc.fhda.edu)cpt46698   ttyq8        Oct  2 15:54  (402.247.190.5)gilberg    ttyq14       Oct  2 15:04  (adsl-36-202-180-43..pacbell.net)gdt43614   ttyq15       Oct  2 16:00  (atc2-99.atc.fhda.edu)rn031017   ttyq16       Oct  2 15:51  (c036-a.stcla1.home.com)$ more whoOct2ab052408   ttyq3        Oct  2 15:24  (atc2-171.atc.fhda.edu)rrp58061   ttyq4        Oct  2 13:17  (351.18.203.129)bachlan    ttyq5        Oct  2 07:48  (genii.atc.fhda.edu)cpt46698   ttyq8        Oct  2 15:54  (402.247.190.5)gilberg    ttyq14       Oct  2 15:04  (adsl-36-202-180-43..pacbell.net)gdt43614   ttyq15       Oct  2 16:00  (atc2-99.atc.fhda.edu)rn031017   ttyq16       Oct  2 15:51  (c036-a.stcla1.home.com)------------------------------------------------------------Session 5.13 Sequenced Command$ echo "\n Goblins & Ghosts\n       Month" > Oct2000; cal 10 2000 >> Oct2000$ more Oct2000  Goblins & Ghosts      Month   October 2000 S  M Tu  W Th  F  S 1  2  3  4  5  6  7 8  9 10 11 12 13 1415 16 17 18 19 20 2122 23 24 25 26 27 2829 30 31------------------------------------------------------------Session 5.14 Grouped Commands$ (echo "\n Goblins & Ghosts\n       Month"; cal 10 2000) > Oct2000$ more Oct2000  Goblins & Ghosts      Month   October 2000 S  M Tu  W Th  F  S 1  2  3  4  5  6  7 8  9 10 11 12 13 1415 16 17 18 19 20 2122 23 24 25 26 27 2829 30 31------------------------------------------------------------Session 5.15 Demonstrate and/or Commands$ cp file1 tempfile && echo "Copy successful"Copy successful$ cp noFile tempfile || echo "Copy failed"noFile - No such file or directoryCopy failed------------------------------------------------------------Session 5.16. Using Backslashes to Print Quotes$ echo Dick said "Hello World!"Dick said Hello World!$ echo Dick said \"Hello World!\"Dick said "Hello World!"------------------------------------------------------------Session 5.17  Displaying Special Characters as Literal Text$ echo < > " ' \ $ksh: syntax error: '>' unexpected$ echo \< \> \"  \' \\  \$< > " ' \ $------------------------------------------------------------Session 5.18 Using Escape to Cancel Return$ (date; \> echo ;\> more TheRavenV1) \> > tempFile$ more tempFileSun Sep 10 16:31:39 PDT 2000Once upon a midnight dreary, while I pondered, weak and weary,...Perched, and sat, and nothing more.------------------------------------------------------------Session 5.19 Using Double Quotes to Guard Metacharacters$ x=hello$ echo "< > $x 'y' ? &"< > hello 'y' ? &------------------------------------------------------------Session 5.20. Quotes Inside Quotes$ echo "Quoth the Raven, "Nevermore."> "Quoth the Raven, Nevermore.$ echo "Quoth the Raven, \"Nevermore.\""Quoth the Raven, "Nevermore."------------------------------------------------------------Session 5.21 Quotes Preserve Whitespace$ echo "Now       is      the     time> For  all  good  students > To   come   to   the   aid> Of    their    college!"Now     is      the     timeFor  all  good  studentsTo   come   to   the   aidOf    their    college!------------------------------------------------------------Session 5.22  Using Single Quotes to Change Meaning of Special Characters$ x=hello$ echo '< > $x "y" ? &'< > $x "y" ? &------------------------------------------------------------Session 5.23 Matching Single Quotes$ x=hello$ echo '< > '$x' "y" ? &'< > hello "y" ? &------------------------------------------------------------Session 5.24  Quotes inside Quotes$ echo 'Quoth the Raven, "Nevermore."'Quoth the Raven, "Nevermore."------------------------------------------------------------Session 5.25 Using Command Substitution with date$ echo Hello! The date and time are: dateHello! The date and time are: date$ echo Hello! The date and time are: $(date)Hello! The date and time are: Mon Sep 11 09:48:04 PDT 2000------------------------------------------------------------Session 5.26 Suspending and Restarting a Foreground Job$ fgLoop.scr ^z                                        #foreground job suspended[2] + Stopped (SIGTSTP)        fgLoop.scr $ dateTue Sep 12 12:43:44 PDT 2000$ fg                                      #resume jobfgLoop.scr ------------------------------------------------------------ Session 5.27  Terminating a Foreground Job$ fgLoop.scr^z                                        # Suspend job[2] + Stopped (SIGTSTP)        fgLoop.scr$ fg                                      # Restart jobfgLoop.scr^c                                        # Cancel job<return>$------------------------------------------------------------Session 5.28  Starting a Background Job$ longJob.scr&[1]     1728406------------------------------------------------------------Session 5.29 Suspending, Restarting, and Terminating a Background Job$ longJob.scr&[1]     1795841$ stop %1[1] + 1795841 Stopped (SIGSTOP)        longJob.scr&$ bg %1[1]     longJob.scr&$ kill %1[1] + Terminated               longJob.scr------------------------------------------------------------ Session 5.30 Moving a Job Between Foreground and Background$ longJob.scr                            # Start long running job in fg                                         # Job is running in foreground.^z                                       # Suspend job[1] + Stopped (SIGTSTP) longJob.scr$ bg                                     # Move job to background.[1]     longJob.scr&$ fg %1                                  # Bring active job to foregroundlongJob.scr                              # Job running in fg------------------------------------------------------------Session 5.31 jobs Status Report$ jobs[4] + Stopped (SIGTSTP)        longJob.scr[3] -  Running                 bgCount200.scr&[2]    Running                 bgCount200.scr&[1]    Running                 bgCount200.scr&$ bgCount200.scr: 2000                 # Message from job [1]bgCount200.scr: 800                    # Message from job [3]bgCount200.scr: 1600                   # Message from job [2]bgCount200.scr: 2200                   # Message from job [1]bgCount200.scr: 1000                   # Message from job [3]bgCount200.scr: 1800                   # Message from job [2]bgCount200.scr: 2400                   # Message from job [1]------------------------------------------------------------Session 5.32  PID Command Output$ ps        PID TTY     TIME CMD    2229478 ttyq0   9:44 sh    2229618 ttyq0   9:27 sh    2247678 ttyq0  10:55 sh    2209680 ttyq0   9:42 sh------------------------------------------------------------Session 5.33 Using Alias to Rename the List Command$ alias dir=ls$ dirTheRaven          file1             longJob.scr       tee2TheRavenV1        fileOut           loop.scr          tee3bgCount200.scr    goodStudents.dat  man.jobs          teeOutblankLine.dat     linkDir           newStudents.dat   teeOut1fgLoop.scr        lnDir             tee1              teeOut2------------------------------------------------------------Session 5.34 Alias of Command with Options$ alias dir='ls -l'$ dirtotal 30-rw-------    1 gilberg  staff       5782 Sep 10 16:19 TheRaven-rw-------    1 gilberg  staff        366 Sep  9 19:56 TheRavenV1...-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut1-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut2------------------------------------------------------------Session 5.35.  Using Alias with Multiple-Command Lines$ alias dir="ls -l | more"$ dirtotal 30-rw-------    1 gilberg  staff       5782 Sep 10 16:19 TheRaven-rw-------    1 gilberg  staff        366 Sep  9 19:56 TheRavenV1...-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut1-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut2------------------------------------------------------------Session 5.36  Using Alias in an Alias Definition$ alias dir=ls$ alias lndir='dir -l | more'$ lndirtotal 30-rw-------    1 gilberg  staff       5782 Sep 10 16:19 TheRaven-rw-------    1 gilberg  staff        366 Sep  9 19:56 TheRavenV1...-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut1-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut2------------------------------------------------------------Session 5.37 Passing Arguments to Alias Commands$ alias fl="ls -l"$ fl f*+ ls -l fgLoop.scr file1 fileOut-rwx------    1 gilberg  staff        175 Sep 13 10:38 fgLoop.scr-rw-r--r--    1 gilberg  staff         15 May 17  2000 file1-rw-r--r--    1 gilberg  staff        395 Sep  9 20:00 fileOut------------------------------------------------------------Session 5.38 Ambiguous Alias Command$ lndir TheRavenV1+ ls -l+ more TheRavenV1Once upon a midnight dreary, while I pondered, weak and weary,. . .Perched, and sat, and nothing more.------------------------------------------------------------Session 5.39 Alias Command Lists$ aliasautoload='typeset -fu'cat=/sbin/catdir='echo '\''Listing for Gilberg'\''; ls -l | more'fl='ls -l | more'...stop='kill -STOP'suspend='kill -STOP $$'$ alias dirdir='echo '\''Listing for Gilberg'\''; ls -l | more'------------------------------------------------------------Session 5.40  Removing Alias Names$ alias dirdir='echo '\''Listing for Gilberg'\''; ls -l | more'$ unalias dir$ alias dirdir: alias not found------------------------------------------------------------Session 5.41 Alias Definition in C Shell% alias dir "echo Gilbergs Directory List; ls -l | more"% dirGilbergs Directory Listtotal 30-rw-------    1 gilberg  staff       5782 Sep 10 16:19 TheRaven...-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut1-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut2------------------------------------------------------------Session 5.42 Only Argument Position Example% alias fl 'ls -l \!* | more'% fl TheRavenV1-rw-------    1 gilberg  staff        366 Sep  9 19:56 TheRavenV1% fltotal 30-rw-------    1 gilberg  staff       5782 Sep 10 16:19 TheRaven...-rw-r--r--    1 gilberg  staff        149 Apr 18  2000 teeOut2------------------------------------------------------------Session 5.43 Alias Command with Two Arguments% ls ~/delete.meNo such file or directory% alias cpto 'cp \!:1 \!:$'% cpto file1 ~/delete.me% ls ~/delete.me/mnt/diska/staff/gilberg/delete.me------------------------------------------------------------Session 5.44 List Alias Example% aliascpto    cp \!:1 \!:$dir     echo Gilbergs Directory List; ls -l | morefl      ls -l \!* | more------------------------------------------------------------Session 5.45 Removing Aliases in C Shell% unalias fl% aliascpto    cp \!:1 \!:$dir     echo Gilbergs Directory List; ls -l | more------------------------------------------------------------Session 5.46 Assignment in Korn and Bash Shells$ x=23$ echo $x23$ x=hello$ echo $xhello$ x="Go Don's"$ echo $xGo Don's------------------------------------------------------------Session 5.47 Assignments in C Shell% set x = 23% echo $x23% set x = hello% echo $xhello% set x = "Go Don's"% echo $xGo Don's------------------------------------------------------------Session 5.48 Using Values$ x=23$ echo The variable x contains $xThe variable x contains 23$ x=hello$ echo The variable x contains $xThe variable x contains hello$ x="Go Don's!"$ echo The variable x contains $xThe variable x contains Go Don's!------------------------------------------------------------Session 5.49 Set CDPATH$ echo $CDPATH$ CDPATH=:$HOME:/bin/usr/files$ echo $CDPATH:/mnt/diska/staff/gilberg:/bin/usr/files------------------------------------------------------------Session 5.50 Demonstrate Change Home Directory$ echo $HOME/mnt/diska/staff/gilberg$ oldHOME=$HOME$ echo $oldHOME/mnt/diska/staff/gilberg$ HOME=$(pwd)$ echo $HOME/mnt/diska/staff/gilberg/unix13bash$ HOME=$oldHOME$ echo $HOME/mnt/diska/staff/gilberg------------------------------------------------------------Session 5.51 Change the Primary Prompt$ PS1="KSH> "KSH> echo $PS1KSH>KSH> PS1="$ "$ 