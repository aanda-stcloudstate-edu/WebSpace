Sessions forUNIX and Shell ProgrammingA TextbookBehrouz A. Forouzan and Richard F. GilbergBrooks/Cole Publishing( ISBN 0 534-95159-7)COPYRIGHT (c) 2003 the Wadsworth Group. Brooks/Cole is an imprint of the Wadsworth Group, a division of Thomson Learning, Inc. Thomson Learning(tm) is a trademark used herein under license.============================================================Chapter 11 ------------------------------------------------------------Session 11.1 A Sample Script# This line is a comment2,14 s/A/B30d42d------------------------------------------------------------Session 11.2 Display Line Numbers$ sed '=' TheRavenV1Output:1Once upon a midnight dreary, while I pondered, weak and weary,2Over many a quaint and curious volume of forgotten lore3While I nodded, nearly napping, suddenly there came a tapping,4As of someone gently rapping, rapping at my chamber door.5"'Tis some visitor," I muttered, "tapping at my chamber door6Only this and nothing more."------------------------------------------------------------Session 11.3 Print Line Numbers of Lines Beginning with "O"$ sed -n '/^O/=' TheRavenV1Output:16------------------------------------------------------------Session 11.4 Insert Title Line in "The Raven"$ sed -f insertTitle.sed TheRavenV1 | cat -n # Script Name: insertTitle.sed# Adds a title to file1i\                         The Raven\                             by\                      Edgar Allan Poe\Output: 1:                          The Raven 2:                              by 3:                       Edgar Allan Poe 4:  5: Once upon a midnight dreary, while I pondered, weak and weary, 6: Over many a quaint and curious volume of forgotten lore 7: While I nodded, nearly napping, suddenly there came a tapping, 8: As of someone gently rapping, rapping at my chamber door. 9: "'Tis some visitor," I muttered, "tapping at my chamber door10: Only this and nothing more."------------------------------------------------------------Session 11.5 Double Space File$ sed -f insertBlankLines.sed TheRavenV1# Script Name: insertBlankLines.sed# This script inserts a blank line before all lines in a file.i\# End of ScriptOutput:Once upon a midnight dreary, while I pondered, weak and weary,Over many a quaint and curious volume of forgotten loreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door."'Tis some visitor," I muttered, "tapping at my chamber doorOnly this and nothing more."------------------------------------------------------------Session 11.6 Append Command$ sed -f appendLineSep.sed TheRavenV1# Script Name: appendLineSep.sed## This script appends dashed dividers after each line a\-----------------------------$a\\                              The EndOutput:Once upon a midnight dreary, while I pondered, weak and weary,-----------------------------Over many a quaint and curious volume of forgotten lore-----------------------------While I nodded, nearly napping, suddenly there came a tapping,-----------------------------As of someone gently rapping, rapping at my chamber door.-----------------------------"'Tis some visitor," I muttered, "tapping at my chamber door-----------------------------Only this and nothing more."-----------------------------                              The End------------------------------------------------------------Session 11.7 Change Script$ sed -f change.sed TheRavenV1# Script Name: change.sed# Replace second line of The Raven2c\Over many an obscure and meaningless problem of calculus boreOutput:Once upon a midnight dreary, while I pondered, weak and weary,Over many an obscure and meaningless problem of calculus boreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door."'Tis some visitor," I muttered, "tapping at my chamber doorOnly this and nothing more."------------------------------------------------------------Session 11.8 Delete Entire Pattern Space$ sed '/^O/d' TheRavenV1Output:Over many a quaint and curious volume of forgotten loreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door."'Tis some visitor," I muttered, "tapping at my chamber door------------------------------------------------------------Session 11.9 Address Matches Search Pattern$ sed '/love/s//adore/' browning.txtInput:How do I love thee? Let me count the ways.I love thee to the depth and breadth and heightMy soul can reach, when feeling out of sightFor the ends of being and ideal grace.I love thee to the level of everyday'sMost quiet need, by sun and candle-light.Output:How do I adore thee? Let me count the ways.I adore thee to the depth and breadth and heightMy soul can reach, when feeling out of sightFor the ends of being and ideal grace.I adore thee to the level of everyday'sMost quiet need, by sun and candle-light.------------------------------------------------------------Session 11.10 Delete Digits$ sed 's/[0-9]//g'Input:123abc456321cba654Output:abccba------------------------------------------------------------Session 11.11 Change Part of a Line$ sed 's/ /     /g'Input:Now is the timeFor all good studentsTo come to the aidOf their college.Output:Now     is      the     timeFor     all     good    studentsTo      come    to      the     aidOf      their   college.------------------------------------------------------------Session 11.12 Add to a Line$ sed -f addPart.sed#!/bin/ksh#  Script Name: addPart.sed#  This script adds two spaces to the beginning and #  -- to the end of each line.s/^/  /s/$/--/Input:Now is the timeFor all good studentsTo come to the aidOf their college.Output:Now is the time--For all good students--To come to the aid--Of their college.--------------------------------------------------------------Session 11.13 Back Reference to Whole Pattern$ sed 's/^.*$/  &--/' Input:Now is the timeFor all good studentsTo come to the aidOf their college. Output:Now is the time--For all good students--To come to the aid--Of their college.--------------------------------------------------------------Session 11.14 Add $ to Prices$ sed 's/[0-9]/$&/' priceFileInput:**Bargain Meals*All you can eat*Breakfast   3.99Lunch       6.49Dinner     14.29Output:**Bargain Meals***All you can eat*Breakfast   $3.99Lunch       $6.49Dinner     $14.29------------------------------------------------------------Session 11.15 Reformat Social Security Numbers$ sed 's/\([0-9]\{3\}\)\([0-9]\{2\}\)\([0-9]\{4\}\)/\1-\2-\3/' empFileInput:George Washington     001010001 John Adams            002020002 Thomas Jefferson      003030003 James Madison         123456789 Output:George Washington     001-01-0001John Adams            002-02-0002Thomas Jefferson      003-03-0003James Madison         123-45-6789------------------------------------------------------------Session 11.16 Demonstrate Global Substitution hereherehere$ sed '1 s/cat/dog/'                  # without global flagInput: Mary had a black cat and a white cat. Output:Mary had a black dog and a white cat.$ sed '1 s/cat/dog/g'                 # with global flagInput:Mary had a black cat and a white cat.Output:Mary had a black dog and a white cat.------------------------------------------------------------Session 11.17 Specific Occurrence Substitution$ sed '1 s/cat/dog/2'Input:Mary had a black cat, a yellow cat, and a white cat. Output:Mary had a black cat, a yellow dog, and a white cat.------------------------------------------------------------Session 11.18 List Permissions and Filenames$ ls -l | sed -n "/^-/s/\(-[^ ]*\).*:..\(.*\)/\1\2/p"Output:-rw------- TheRaven-rw------- TheRavenV1-rwxr-xr-x appendLineSep.sed------------------------------------------------------------Session 11.19 Transform Characters$ sed 'y/aeiou/EAIOU/'Input:A good time was had by all Under the Harvest Moon last September. Output:A gOOd tImE wAs hAd by AllUndEr thE HArvEst MOOn lAst SEptEmbEr.------------------------------------------------------------Session 11.20 Delete Blank Lines$ sed -f deleteBlankLines.sed deleteBlankLines.dat# Script Name: deleteBlankLines.sed# This script deletes blank lines only if# the preceding line starts with a number./^[0-9]/{         n         /^$/d        }Input:Second Line: Line 1 & line 3 blank 4th line-followed by non-blank line This is line 5 6th line followed by blank line Last line (#8)Output:Second Line: Line 1 & line 3 blank4th line-followed by non-blank lineThis is line 56th line followed by blank lineLast line (#8)------------------------------------------------------------Session 11.21 Append Two Lines Together$ sed -f appendLines.sed appendLines.dat# Script Name: appendLines.sed# This script appends every two lines# so that the output is Line1 Line2,# Line3 Line4, etc.Ns/\n/ /Input:1111first1111 2222second222 3333third3333 4444fourth4445555last55555Output:1111first1111 2222second2223333third3333 4444fourth4445555last55555------------------------------------------------------------Session 11.22 Delete Extra Blank Lines$ sed -f appendBlkLines.sed appendBlkLines.dat# Script Name: appendBlkLines.sed# This script deletes extra blank lines/^$/{     $!N     /^\n$/D    }Input: First Line Second Line-One Blank Line Third Line-Two Blank Lines Fourth Line-Three Blank Lines Last LineOutput:First LineSecond Line-One Blank LineThird Line-Two Blank LinesFourth Line-Three Blank LinesLast Line------------------------------------------------------------Session 11.23 Demonstrate Print Command$ sed 'p' linesOfNums.datInput: 11111111111 22222222222 33333333333 44444444444 5555Last555 Output:11111111111111111111112222222222222222222222333333333333333333333344444444444444444444445555Last5555555Last555------------------------------------------------------------Session 11.24 Print Line Followed by a Tab$ sed -nf printFirstLine.sed printFirstLine.dat# Script Name: printFirstLine.sed# Prints lines followed by a tab$!N# pattern in next command is newline & tab./\n      /PDInput: This is line 1. This is line 2.     Line 3 starts with a tab.	    Line 4 starts with a tab.This is line 5. It's the last line.Output:    Line 3 starts with a tab.    Line 4 starts with a tab.------------------------------------------------------------Session 11.25 Print Nonprintable Characters $ sed -n 'l' listFile.datInput: Octal  0:    || Octal  9:    || Octal 21:    || Octal 22:    || Octal 23:    || Output:Octal  0:    ||Octal  9:    |\t|Octal 21:    |\21|Octal 22:    |\22|Octal 23:    |\23|------------------------------------------------------------Session 11.26 Read File$ sed -f readFile.sed readFile.dat# Script Name: readFile.sed# This script inserts a letterhead and signature# block in a file.1 r letterHead.dat$ r signature.datInput:letterHead.dat            UNIX Consultants Inc                P.O. Box 555          Silicon Valley, CA 94555readFile.datApril 1, 2001John DoeSmart.com Inc.1234 Success WayUserville, CA 95555...signature.datSincerely yours,Richard F. GilbergUNIX Consultants IncOutput:            UNIX Consultants Inc                P.O. Box 555          Silicon Valley, CA 94555April 1, 2001John DoeSmart.com Inc.1234 Success WayUserville, CA 95555...Sincerely yours,Richard F. GilbergUNIX Consultants Inc------------------------------------------------------------Session 11.27 Write Files$ sed -nf aptFile.sed aptFile.dat# Script Name: writeFile.sed# This script creates seven activity log files, one for# each day of the week./Monday/,/^$/w Monday.dat/Tuesday/,/^$/w Tuesday.dat/Wednesday/,/^$/w Wednesday.dat/Thursday/,/^$/w Thursday.dat/Friday/,/^$/w Friday.dat/Saturday/,/^$/w Saturday.dat/Sunday/,/^$/w Sunday.datInput: Monday 10:00 Dr. Jones Monday  1:30 Board meeting Tuesday 8:30 Staff meeting Tuesday 2:15 Scheduling Tuesday 3:00 Design review Wednesday Thursday 11:30 Lunch with boss Thursday  2:00 Project FridaySaturdaySunday Output: (cat -n *.dat)1: Friday2:1: Monday 10:00 Dr. Jones2: Monday  1:30 Board meeting3:1: Saturday2:1: Sunday1: Thursday 11:30 Lunch with boss2: Thursday  2:00 Project3:1: Tuesday 8:30 Staff meeting2: Tuesday 2:15 Scheduling3: Tuesday 3:00 Design Review4:1: Wednesday2:------------------------------------------------------------Session 11.28 Using Branch to Print Lines$ sed -f branch.sed branch.dat# Script Name: branch.sed# This script prints a line multiple times (up to 3)# depending on the first characters of the line./(1)/ b/(2)/ b print2/(3)/ b print3# Branch to end of scriptb# print three:print3ppb# print two:print2pInput: Print me once.(2)Print me twice. (3)Print me thrice. (4)Print me once. Output:Print me once.(2)Print me twice.(2)Print me twice.(3)Print me thrice.(3)Print me thrice.(3)Print me thrice.(4)Print me once.------------------------------------------------------------Session 11.29 Printing with Branch on Substitution$ sed -f branchSub.sed branchSub.dat# Script Name: branchSub.sed# This script prints a line multiple times (up to 3)# depending on the first characters of the line.s/(1)//ts/(2)//t print2s/(3)//t print3# Branch to end of scriptb# print three:print3ppb# print two:print2pInput: (1)Print me once. (2)Print me twice. (3)Print me thrice. Default: print once. Output:Print me once.Print me twice.Print me twice.Print me thrice.Print me thrice.Print me thrice.Default: print once.------------------------------------------------------------Session 11.30 Exchange Lines in a File$ sed -nf exchange.sed exchange.dat# Script Name: exchange.sed# This script exchanges pairs of lines in a file.# copy pattern to holdh# read next linen# retrieve hold areaGpInput:line 1 line 2 line 3 line 4 line 5 line 6 Output:line 2line 1line 4line 3line 6line 5------------------------------------------------------------Session 11.31 The Quit Command$ sed '/^$/q' TheRavenOutput:Once upon a midnight dreary, while I pondered, weak and weary,Over many a quaint and curious volume of forgotten loreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door."'Tis some visitor," I muttered, "tapping at my chamber doorOnly this and nothing more."------------------------------------------------------------Session 11.32 Demonstrate Quit Command$ sed -nf quit.sed TheRavenV1# Script Name: quit.sed# Prints until first blank line, then quits./^$/b quitpb:quitqOutput:Once upon a midnight dreary, while I pondered, weak and weary,Over many a quaint and curious volume of forgotten loreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door."'Tis some visitor," I muttered, "tapping at my chamber doorOnly this and nothing more."------------------------------------------------------------Session 11.33 Print to a Specified Line$ sed '4q' TheRavenOutput:Once upon a midnight dreary, while I pondered, weak and weary,Over many a quaint and curious volume of forgotten loreWhile I nodded, nearly napping, suddenly there came a tapping,As of someone gently rapping, rapping at my chamber door.------------------------------------------------------------Session 11.34 Delete BEGIN and END Lines$ sed '/BEGIN.*END/d' beginEnd.datInput: 1 This is the first line. 2 This is the BEGINning of begin. 3 It has several lines. 4 This line has begin but not END. 5 This is just another line. 6 This line has END in it. 7 But it is not the end. 8 This line has BEGIN and END in it. 9 This is the end--at last! Output:1 This is the first line.2 This is the BEGINning of begin.3 It has several lines.4 This line has begin but not END.5 This is just another line.6 This line has END in it.7 But it is not the end.9 This is the end--at last!------------------------------------------------------------Session 11.35Delete BEGIN Not END$ sed -f beginEnd2.sed beginEnd.dat# Delete lines that contain BEGIN but not END /BEGIN/{         /END/!d        }Input: 1 This is the first line. 2 This is the BEGINning of begin. 3 It has several lines. 4 This line has begin but not END. 5 This is just another line. 6 This line has END in it. 7 But it is not the end. 8 This line has BEGIN and END in it. 9 This is the end--at last! Output:1 This is the first line.3 It has several lines.4 This line has begin but not END5 This is just another line.6 This line has END in it.7 But it is not the end.8 This line has BEGIN and END in it.9 This is the end--at last!------------------------------------------------------------Session 11.36 Delete BEGIN through END$ sed '/BEGIN/,/END/d' beginEnd.datInput: 1 This is the first line. 2 This is the BEGINning of begin. 3 It has several lines. 4 This line has begin but not END. 5 This is just another line. 6 This line has END in it. 7 But it is not the end. 8 This line has BEGIN and END in it. 9 This is the end--at last! Output:1 This is the first line.5 This is just another line.6 This line has END in it.7 But it is not the end.------------------------------------------------------------Session 11.37 Delete Text between BEGIN and END$ sed 's/BEGIN.*END//' beginEnd.datInput: 1 This is the first line. 2 This is the BEGINning of begin. 3 It has several lines. 4 This line has begin but not END. 5 This is just another line. 6 This line has END in it. 7 But it is not the end. 8 This line has BEGIN and END in it. 9 This is the end--at last! Output:1 This is the first line.2 This is the BEGINning of begin.3 It has several lines.4 This line has begin but not END5 This is just another line.6 This line has END in it.7 But it is not the end.8 This line has in it.9 This is the end--at last!------------------------------------------------------------Session 11.38 Delete BEGIN through END 2$ sed -f beginEnd5.sed beginEnd.dat#  script name: beginEnd5.sed#  Deletes the text between two words, BEGIN and END. /BEGIN.*END/s/// /BEGIN/,/END/{               # Put BEGIN line in hold space               /BEGIN/{                       h                       d                      }               # lines between BEGIN & END in hold space               /END/!{                      H                      d                     }               # Exchange hold space and pattern space               /END/{                     x                     # Append hold (END line) to pattern space                     G                            }               # pattern space now contains all lines               s/BEGIN.*END//              }Input: 1 This is the first line. 2 This is the BEGINning of begin. 3 It has several lines. 4 This line has begin but not END. 5 This is just another line. 6 This line has END in it. 7 But it is not the end. 8 This line has BEGIN and END in it. 9 This is the end--at last! Output:1 This is the first line.2 This is the .5 This is just another line.6 This line has END in it.7 But it is not the end.8 This line has  in it.9 This is the end--at last!------------------------------------------------------------Session 11.39 Using grep or sedgrep:$ grep '^[A-Z].*[A-Z]$' file1.datInput: abcdefghijklm NopqrstuvwxY Z abcdefghijk lMnopqrstursT UVwxyz AbcdeF Output:NopqrstuvwxYUVwxyz AbcdeFsed:$ sed -n '/^[A-Z].*[A-Z]$/p' file1.datInput: abcdefghijklm NopqrstuvwxY Z abcdefghijk lMnopqrstursT UVwxyz AbcdeF Output:NopqrstuvwxYUVwxyz AbcdeF------------------------------------------------------------Session 11.40  Using grep or sed Example 2grep:$ grep -v '^[A-Z].*[A-Z]$' file1.datInput: abcdefghijklm NopqrstuvwxY Z abcdefghijk lMnopqrstursT UVwxyz AbcdeF Output:abcdefghijklmZ abcdefghijklMnopqrstursTsed:$ sed -n '/^[A-Z].*[A-Z]$/!p' file1.datInput: abcdefghijklm NopqrstuvwxY Z abcdefghijk lMnopqrstursT UVwxyz AbcdeF Output:abcdefghijklmZ abcdefghijklMnopqrstursT