<!doctype html>
<html>

<head>
    <meta charset="UTF-8">
    <title>CSCI 331 Comprehensive Group Project Fall 2015</title>
    <style>
	code{font-weight:bold; color:MidnightBlue}
    </style>
</head>

<body>

<div class=Section1>

<h1>CSCI 331 - Software Systems Fall 2015</h1>

<h3>Group Project</h3> 

<p>
<h2>THE PROGRAM:</h2>This project has two components.
<br>
Your team has implemented:
<h3>Component A</h3>
the creation of a <u>sorted</u> <u>file</u> of <u>records</u> via
(<i>tournament</i>) merging of <u>replacement selection</u> sorted lists.<br>
<ul>
    <li>Modify one (or synthesize from more) of your team member's <u>replacement selection</u> code
	to read from an entry sequenced file of records, then write to another file the set of sorted runs
	(sorted by a specified field) sequentially.</li>
    <li>For the merge step, use the STL priority_queue, or a priority_queue based heap of your own, to simultaneously
	merge all of the runs analogous to the Tournament Merge in our Folk text.  The merge function will read from 
	the file of sorted record runs then write to a new file of sorted records.
    <li>The following statistics are to be written to a log file:</li>
    <ol>
	<li>an identification of which file the (input) unsorted records are from,</li>
	<li>an identification of which file the (input/output) sorted record runs are placed in,</li>
	<li>an identification of which file the (output) sorted records are placed in,</li>
	<li>the number of records that can fit in memory,</li>
	<li>the number of records,</li>
	<li>the number of runs,</li>
	<li>a listing of the count of records in each run,</li>
	<li>the <i>smallest</i>, <i>largest</i> and <i>arithmetic mean</i> count of records in all of the runs,</li>
    </ol>
    <li>Create, use, and log, a debug function which checks that the file of sorted record <i>runs</i> is correctly ordered.
    <li>Create, use, and log, a debug function which checks that the file of sorted records is correctly ordered.
</ul>
<b>Component A</b> lays the foundation for the second team component which will implement
<h3>Component B</h3>
the creation of a <u>B+tree index</u> of that list.<br>
We are going to implement a B+tree with the following attributes:
<ul>
    <li> We will use a configurable order B+tree (defaulting to a block capacity of 6)
    <li> Our records will reside in the <i>leaves only</i> in a seqence of
    <u>doubly linked blocks</u>.  Higher order nodes will contain <i>only keys</i>.<br>
    (We are borrowing the idea of linked blocked records from Chapter 10.1 &amp; 10.2)
    <ul>
	<li>A more robust design allows for there to be two block capacities: one for the blocks containing records,
	    and a another capacity for non-leaf blocks containing only keys.
    </ul>
    <li>Essentially, we are implimenting Programming Exercises 10.19, 10.21, and 10.22, and <i>optionally</i>, 10.20</li>
    <li>Records will consist of:</li>
    <ul>
	<li>integers</li>
	<li>strings</li>
	<li><i>A-level</i>: records composed of an integer field and a string field (<i>your choice of order</i>)</li>
    </ul>
</ul>
Write a test driver that demonstrates that your B+tree works.<br>
At a minimum your program should be able to:
<ul>
    <li>open the files of records along with their B+tree indices
    <li>print all the information about a record
    <li>modify fields in any record 
    <li>insert records into any file 
    <li>delete records from any file 
    <li>verify that the B+Tree file is consistent, and rebuild if inconsistent
    <li>rebuild the B+Tree
    <li>any other useful operations you think of that you can implement and test
</ul>
</p>
You should have a method of printing (dumping) the intermediate contents of the B+tree
so that you can determine whether your algorithms for building, insertion and
deletion are functioning properly.

<p>
<h5>Both Team Components</h5>
<ol>
    <li>Work together to on the interface to ensure that each <b>component</b> can work
	seamlessly with the other.</li>
    <li>Reserve an hour during finals week for the team to collectively make an oral
	presentation and demonstration of their project to the professor.</li>
</ol>

<h2>WHAT TO TURN IN:</h2>

<ol>
    <li><u>Design document for the classes</u>.<br>
	(Consider using facilities in, e.g. Jgrasp or Doxygen)
    (<font color="teal">25% of your grade</font>)

    <li> <u>The test data used</u>,<br>
    along with an <u>explanation of why you chose it</u>,<br>
    and <u>what were the results of the tests</u>.<br>
    This should include a script file from the test runs.<br>
    Each test should be annotated on the script file.<br>
    (<font color="teal">25% of your grade</font>)

    <li><u>The source file of the program</u>.<br>
    Also, leave a copy of the source file in your account until the graded
    program is returned to you.<br>
    (<font color="teal">20% of your grade</font>)

    <li><u>The users manual</u>.<br>
    This should be typed and have a section for each of the following:<br>
    (<font color="teal">25% of your grade</font>)
    <ol type=a>
	<li>The name of the program.
	<li>What the program is supposed to do.
	<li>Where it is located on the computer.<br>
	(<tt>pwd</tt> will answer this for you)
	<li>How to compile and run the program. (use a <u>makefile</u>)
	<li>A sample execution of the program.<br>
	(this is not the test data)
	<li>What the known errors in the program are.
    </ol>
    <li>Everyone in the group should do their own paragraph describing
	what you learned from this assignment.  
	<br>(<font color="teal">5% of your grade</font>)
    <ul>
	<li>How much time did you spend on the program?
	<li>Did you plan well before going to the computer?
	<li>Did you test the program completely? 
	<li>Did you learn anything new about the language?
	<li>Did you learn anything new about the way you study or should study?
    </ul>
    <li>As a group, what did you learn to do, and not do, from the peer review
	of other groups projects?
    <li>Everyone in the group should turn in the peer evaluation.
	These should be turned in to the instructor separately.
    <li>The group leader should schedule a 30-minute meeting with me to
	demonstrate the project.  The group leader must also turn in their
	group log, the group member evaluations and the summary of the PSP data.
</ol>

</div>

</body>

</html>
